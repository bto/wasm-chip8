(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{55:function(t,r,e){"use strict";var s=e.w[t.i];t.exports=s;e(56);s.A()},56:function(t,r,e){"use strict";(function(t){e.d(r,"a",(function(){return c})),e.d(r,"b",(function(){return u})),e.d(r,"c",(function(){return d}));var s=e(55);let i=new("undefined"==typeof TextDecoder?(0,t.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});i.decode();let n=null;function h(t,r){return i.decode((null!==n&&n.buffer===s.z.buffer||(n=new Uint8Array(s.z.buffer)),n).subarray(t,t+r))}let a=null;function o(){return null!==a&&a.buffer===s.z.buffer||(a=new Int32Array(s.z.buffer)),a}class c{static __wrap(t){const r=Object.create(c.prototype);return r.ptr=t,r}free(){const t=this.ptr;this.ptr=0,s.a(t)}get i(){return s.c(this.ptr)>>>0}set i(t){s.j(this.ptr,t)}get sp(){return s.g(this.ptr)>>>0}set sp(t){s.n(this.ptr,t)}get pc(){return s.e(this.ptr)>>>0}set pc(t){s.l(this.ptr,t)}get delay_timer(){return s.b(this.ptr)}set delay_timer(t){s.i(this.ptr,t)}get sound_timer(){return s.f(this.ptr)}set sound_timer(t){s.m(this.ptr,t)}get key_waiting(){return 0!==s.d(this.ptr)}set key_waiting(t){s.k(this.ptr,t)}get vram_changed(){return 0!==s.h(this.ptr)}set vram_changed(t){s.o(this.ptr,t)}static new(){var t=s.r();return c.__wrap(t)}ptr_ram(){return s.s(this.ptr)}ptr_stack(){return s.t(this.ptr)}ptr_v(){return s.u(this.ptr)}ptr_vram(){return s.v(this.ptr)}set_key(t){s.y(this.ptr,t)}run(){s.x(this.ptr)}render(){try{const e=s.p.value-16;s.p.value=e,s.w(e,this.ptr);var t=o()[e/4+0],r=o()[e/4+1];return h(t,r)}finally{s.p.value+=16,s.q(t,r)}}}const u="function"==typeof Math.random?Math.random:(p="Math.random",()=>{throw new Error(p+" is not defined")});var p;const d=function(t,r){throw new Error(h(t,r))}}).call(this,e(23)(t))},58:function(t,r,e){"use strict";e.r(r);var s=e(56),i=e(55),n=e(21);(new class{constructor(){this.COLOR_OFF="#FFFFFF",this.COLOR_ON="#000000",this.PIXEL_SIZE=10,this.HEIGHT=32,this.WIDTH=64,this.KEYMAP={88:0,49:1,50:2,51:3,81:4,87:5,69:6,65:7,83:8,68:9,90:10,67:11,52:12,82:13,70:14,86:15},this.run=()=>{requestAnimationFrame(this.loop)},this.loop=()=>{const t=this.chip8;t.run(),t.vram_changed&&this.render(),this.showMemory(),this.showRegisters(),this.run()},this.render=()=>{const t=this.canvas,r=this.chip8,e=new Uint8Array(i.z.buffer,r.ptr_vram(),this.HEIGHT*this.WIDTH);t.beginPath();for(let r=0;r<=this.HEIGHT;r++)for(let s=0;s<=this.WIDTH;s++){const i=r*this.WIDTH+s;t.fillStyle=e[i]?this.COLOR_ON:this.COLOR_OFF,t.fillRect(s*this.PIXEL_SIZE,r*this.PIXEL_SIZE,this.PIXEL_SIZE,this.PIXEL_SIZE)}t.stroke()},this.renderImage=()=>{const t=this.canvas,r=this.chip8,e=new Uint8Array(i.z.buffer,r.ptr_vram(),this.HEIGHT*this.WIDTH),s=t.createImageData(this.WIDTH,this.HEIGHT);for(let t=0;t<e.length;t++){const r=4*t;e[t]?(s.data[r+0]=0,s.data[r+1]=0,s.data[r+2]=0,s.data[r+3]=255):(s.data[r+0]=255,s.data[r+1]=255,s.data[r+2]=255,s.data[r+3]=255)}t.putImageData(s,0,0)},this.setKey=t=>{this.chip8.set_key(this.KEYMAP[t.keyCode])},this.showMemory=()=>{const t=this.chip8,r=n.c.dispatch,e=Array.from(new Uint8Array(i.z.buffer,t.ptr_ram(),4095));r(n.a.ram.set(e))},this.showRegisters=()=>{const t=this.chip8,r=n.c.dispatch;r(n.a.register.setI(t.i)),r(n.a.register.setPC(t.pc)),r(n.a.register.setSP(t.sp));const e=Array.from(new Uint8Array(i.z.buffer,t.ptr_v(),16));r(n.a.register.setV(e))},this.chip8=s.a.new();const t=document.getElementById("display");t.height=this.PIXEL_SIZE*this.HEIGHT,t.width=this.PIXEL_SIZE*this.WIDTH,this.canvas=t.getContext("2d"),addEventListener("keydown",this.setKey)}}).run()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,